generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model inspection {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  property_id  String   @db.Uuid
  inspector_id String   @db.Uuid
  report       String   @db.VarChar(255)
  date         DateTime @db.Date
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [inspector_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  property     property @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model interest {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  property_id String   @db.Uuid
  customer_id String   @db.Uuid
  date        DateTime @db.Date
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  property    property @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model offer {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  property_id String   @db.Uuid
  buyer_id    String   @db.Uuid
  price       Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [buyer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  property    property @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model property {
  id                            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                         String       @db.VarChar(255)
  location                      String       @db.VarChar(255)
  price                         Int
  size                          Int
  seller_id                     String?      @db.Uuid
  buyer_id                      String?      @db.Uuid
  agent_id                      String?      @db.Uuid
  created_at                    DateTime     @default(now()) @db.Timestamp(6)
  updated_at                    DateTime     @default(now()) @db.Timestamp(6)
  inspection                    inspection[]
  interest                      interest[]
  offer                         offer[]
  user_property_agent_idTouser  user?        @relation("property_agent_idTouser", fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_property_buyer_idTouser  user?        @relation("property_buyer_idTouser", fields: [buyer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_property_seller_idTouser user?        @relation("property_seller_idTouser", fields: [seller_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                             String         @unique @db.VarChar(255)
  firstName                         String?        @db.VarChar(255)
  lastName                          String?        @db.VarChar(255)
  roq_user_id                       String         @db.VarChar(255)
  tenant_id                         String         @db.VarChar(255)
  created_at                        DateTime       @default(now()) @db.Timestamp(6)
  updated_at                        DateTime       @default(now()) @db.Timestamp(6)
  inspection                        inspection[]
  interest                          interest[]
  offer                             offer[]
  organization                      organization[]
  property_property_agent_idTouser  property[]     @relation("property_agent_idTouser")
  property_property_buyer_idTouser  property[]     @relation("property_buyer_idTouser")
  property_property_seller_idTouser property[]     @relation("property_seller_idTouser")
}
